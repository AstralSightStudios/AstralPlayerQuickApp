<template>
    <div class="debug-page">
        <div class="titlebar" @click="RouterBack()">
            <div style="width: 40px; height: 40px">
                <image src="/common/icons8-back-100.png" style="width: 40px; height: 40px"></image>
            </div>
            <div class="titlebar-text">
                <text style="font-size: 40px; font-weight: bold">Debug</text>
            </div>
        </div>
        <input type="button" value="释放测试Dec文件" style="margin-top: 40px; width: 400px" @click="TestDec()"></input>
        <input type="button" value="释放测试清单12FPS" style="margin-top: 20px; width: 400px" @click="TestManifest()"></input>
        <input type="button" value="释放测试清单8FPS" style="margin-top: 20px; width: 400px" @click="TestManifest8FPS()"></input>
        <input type="button" value="临时番剧OP清单10FPS" style="margin-top: 20px; width: 400px" @click="TmpManiFest10FPS()"></input>
        <input type="button" value="删除installed与play" style="margin-top: 20px; width: 400px"
            @click="RemoveInstalledAndPlay()"></input>
        <input type="button" value="模拟复制测试清单" style="margin-top: 20px; width: 400px" @click="CopyTestManifest()"></input>
        <input type="button" value="直进decoder.ux" style="margin-top: 20px; width: 400px" @click="RouterDecoder()"></input>
        <input type="button" value="直进download.ux" style="margin-top: 20px; width: 400px" @click="RouterDownload()"></input>
        <input type="button" value="写任意dec到play" style="margin-top: 20px; width: 400px" @click="WriteDecToPlay()"></input>
        <text style="margin-top: 20px;"> </text>
    </div>
</template>

<script>
import router from '@system.router'
import file from '@system.file'
import prompt from '@system.prompt'
 export default {
    RouterBack(){
        console.log("clicked")
        router.back()
    },
    WriteDecToPlay(){
        file.list({
            uri: "internal://files/",
            success: (data) => {
                data.fileList.forEach((target_file) => {
                    if(target_file.uri.toString().includes("asplayerdec")){
                        console.log("File:", target_file);
                        var target_file_uri = target_file.uri;
                        console.log("Target URI:", target_file_uri);

                        file.readText({
                            uri: target_file_uri,
                            success: (decfile) => {
                                console.log("DecFile内容：" + decfile.text);
                                file.writeText({
                                    uri: "internal://files/play",
                                    text: decfile.text,
                                    success: () => {
                                        console.log("写入成功");
                                        prompt.showToast({
                                            message: "Done!"
                                        });
                                    },
                                    fail: (data, code) => {
                                        prompt.showToast({
                                            message: "写入play出错：data=" + data + " code=" + code
                                        });
                                    }
                                });
                            },
                            fail: (data, code) => {
                                prompt.showToast({
                                    message: "读取asplayerdec出错：data=" + data + " code=" + code
                                });
                            }
                        });
                    }
                });
            },
            fail: (data, code) => {
                prompt.showToast({
                    message: "List文件出错：data=" + data + " code=" + code
                });
            }
        });
    },
    RouterDecoder(){
        router.push({
            uri: "pages/decoder"
        })
    },
    RouterDownload(){
        router.push({
            uri: "pages/download"
        })
    },
    CopyTestManifest(){
        file.readText({
            uri: "internal://files/testVidaaas.asplayerlist",
            success: (data) => {
                file.writeText({
                    uri: "internal://files/installed",
                    text: data.text,
                    success: (data) => {
                        prompt.showToast({
                            message: "成功复制"
                        })
                    },
                    fail: (data, code) => {
                        prompt.showToast({
                            message: "写入installed出错：data=" + data + " code=" + code
                        })
                    }
                })
            },
            fail: (data, code) => {
                prompt.showToast({
                    message: "读取testVid出错：data=" + data + " code=" + code
                })
            }
        })
    },
    RemoveInstalledAndPlay(){
        file.delete({
            uri: "internal://files/installed",
            success: () => {
                file.delete({
                    uri: "internal://files/play",
                    success: () => {
                        prompt.showToast({
                            message: "删除成功，请重启快应用"
                        })
                    }
                })
            }
        })
    },
    TestDec(){
        var decJson = {
            "formatVersion": 0,
            "title": "测试视频",
            "width": 480,
            "height": 320,
            "fps": 15,
            "frame": 641,
            "pic_format": "png",
            "pics": "vid/test/output_"
        }
        file.writeText({
            uri: "internal://files/testVid.asplayerdec",
            text: JSON.stringify(decJson),
            success: () => {
                prompt.showToast({
                    message: "释放成功"
                })
            }
        })
    },
    TestManifest(){
        var mfJson = {
            video_title: "测试视频",
            video_url: "http://vjs.zencdn.net/v/oceans.mp4",
            require_fps: 12,
            require_format: "jpg",
            require_res_width: 480,
            require_res_height: 320
        }
        file.writeText({
            uri: "internal://files/testVidaaas.asplayerlist",
            text: JSON.stringify(mfJson),
            success: () => {
                prompt.showToast({
                    message: "释放成功"
                })
            }
        })
    },
    TestManifest8FPS(){
        var mfJson = {
            video_title: "测试视频",
            video_url: "http://vjs.zencdn.net/v/oceans.mp4",
            require_fps: 8,
            require_format: "jpg",
            require_res_width: 480,
            require_res_height: 320
        }
        file.writeText({
            uri: "internal://files/testVidaaas.asplayerlist",
            text: JSON.stringify(mfJson),
            success: () => {
                prompt.showToast({
                    message: "释放成功"
                })
            }
        })
    },
    TmpManiFest10FPS(){
        var mfJson = {
            video_title: "测试视频",
            video_url: "https://github.com/Searchstars/searchstars/releases/download/test-1/testvid.mp4",
            require_fps: 10,
            require_format: "jpg",
            require_res_width: 480,
            require_res_height: 320
        }
        file.writeText({
            uri: "internal://files/testVidaaas.asplayerlist",
            text: JSON.stringify(mfJson),
            success: () => {
                prompt.showToast({
                    message: "释放成功"
                })
            }
        })
    }
 }
</script>

<style>
.titlebar {
    width: 55%;
    margin-top: 45px;
    align-items: center;
}

.titlebar-text {
    align-items: center;
    justify-content: center;
    width: 100%;
}

.debug-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
    position: absolute;
    width: 100%;
}
</style>